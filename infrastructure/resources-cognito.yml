Resources:
  UserPool:
    Type: "AWS::Cognito::UserPool"
    Properties:
      UserPoolName: ${self:service}-${self:provider.stage}
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      AliasAttributes:
        - email
      AutoVerifiedAttributes:
        - email
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: UserPool
      GenerateSecret: false
  IdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      IdentityPoolName: "${self:service} ${self:provider.stage}"
      AllowUnauthenticatedIdentities: false
      CognitoIdentityProviders:
        - ProviderName:
            Fn::GetAtt: [UserPool, ProviderName]
          ClientId:
            Ref: UserPoolClient
  IdentityPoolRoleAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId:
        Ref: IdentityPool
      Roles:
        authenticated:
          Fn::GetAtt: [UserAccessRole, Arn]

Outputs:
  UserPoolId:
    Description: The UserPoolId for the frontend
    Value:
      Ref: UserPool
    Export:
      Name: ${self:service}:${self:provider.stage}:UserPoolId
  UserPoolWebClientId:
    Description: The UserPoolWebClientId for the frontend
    Value:
      Ref: UserPoolClient
    Export:
      Name: ${self:service}:${self:provider.stage}:UserPoolWebClientId
  IdentityPoolId:
    Description: The IdentityPoolId for the frontend
    Value:
      Ref: IdentityPool
    Export:
      Name: ${self:service}:${self:provider.stage}:IdentityPoolId
