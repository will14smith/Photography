@page "/index.html"
@using Toxon.Photography.Generation.Models

<LayoutView Layout="typeof(Layout)">
    @if (!Photographs.Any())
    {
        <div class="row">
            <div class="col-md-12">
                <h3 class="text-muted">No images, check back later!</h3>
            </div>
        </div>
    }
    else
    {
        <ul class="gallery">
            @foreach (var vm in Photographs)
            {
                var photograph = vm.Photograph;
                
                var classNames = new List<string>();
                
                switch(vm.Layout.Width)
                {
                    case 2: classNames.Add("wide"); break;
                    case 3: classNames.Add("wider"); break;
                }
                
                switch(vm.Layout.Height)
                {
                    case 2: classNames.Add("tall"); break;
                    case 3: classNames.Add("taller"); break;
                }

                <li class="@string.Join(" ", classNames)">
                    <img src="@(vm.ThumbnailUrl ?? "https://placehold.co/350x233?text=Processing...")" alt="@photograph.Title" title="@photograph.Title" loading="lazy" onClick="openModal(this)">
                </li>
            }
        </ul>
        
        <div class="modal fade" id="image-modal">
            <div class="modal-dialog modal-dialog-centered modal-xl">
                <div class="modal-body">
                </div>
            </div>
        </div>
        
        <script type="text/javascript">
            const modalElem = document.querySelector("#image-modal");
            const modalImgElem = document.createElement("img");
            modalImgElem.style.maxWidth = "100%";
            modalElem.querySelector(".modal-body").append(modalImgElem);
            
            function openModal(sender) {            
                modalImgElem.src = sender.src;
                modalImgElem.alt = sender.alt;
                modalImgElem.title = sender.title;
                
                const modal = bootstrap.Modal.getOrCreateInstance(modalElem);
                modal.show();
            }
        </script>
    }
</LayoutView>

@code {
    [Parameter, EditorRequired]
    public IEnumerable<PhotographViewModel> Photographs { get; set; }
}