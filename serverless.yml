service: photography

plugins:
  - serverless-terraform-outputs

custom:
  imageProcessorTopicName: ${self:service}-${self:provider.stage}-imageprocessor
  staticSiteCertificateArn: ${file(./serverless.${self:provider.stage}.json):staticSiteCertificateArn}
  staticSiteHostNames: ${file(./serverless.${self:provider.stage}.json):staticSiteHostNames}
  tfStage: ${self:provider.stage}

  imageBucketArn: ${terraform:${self:custom.tfStage}:image-bucket-arn.value}
  siteBucketArn: ${terraform:${self:custom.tfStage}:site-bucket-arn.value}

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  region: eu-west-2
  runtime: dotnetcore2.1

  environment:
    PHOTOGRAPH_TABLE: ${self:service}-${self:provider.stage}-photograph
    IMAGE_BUCKET: ${self:service}-${self:provider.stage}-image
    IMAGE_PROCESSOR_TOPIC_ARN:
      Ref: ImageProcessorTopic
    SITE_BUCKET: ${self:service}-${self:provider.stage}-site

  iamRoleStatements: ${file(infrastructure/provider-iam.yml)}

package:
  artifact: deploy/deploy-package.zip

functions:
  - ${file(infrastructure/functions.yml)}
  - ${file(infrastructure/functions-thumbnailprocessor.yml)}

resources:
  - ${file(infrastructure/resources-api-gateway.yml)}
  - ${file(infrastructure/resources-cloudfront.yml)}
  - ${file(infrastructure/resources-cognito.yml)}
  - ${file(infrastructure/resources-dynamodb.yml)}
  - ${file(infrastructure/resources-iam.yml)}
  - ${file(infrastructure/resources-sns.yml)}
  - ${file(infrastructure/resources-thumbnailprocessor.yml)}
