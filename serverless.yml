service: photography

plugins:
  - serverless-terraform-outputs

custom:
  tfStage: ${self:provider.stage}

  lambdaRoleArn: ${terraform:${self:custom.tfStage}:lambda-role-arn.value}

  imageBucketArn: ${terraform:${self:custom.tfStage}:image-bucket-arn.value}
  siteBucketArn: ${terraform:${self:custom.tfStage}:site-bucket-arn.value}
  photographTableArn: ${terraform:${self:custom.tfStage}:photograph-table-arn.value}
  imageProcessorTopicArn: ${terraform:${self:custom.tfStage}:image-processor-topic-arn.value}
  imageProcessorTopicName: ${terraform:${self:custom.tfStage}:image-processor-topic-name.value}

  thumbnailProcessorClusterArn: ${terraform:${self:custom.tfStage}:thumbnail-processor-cluster-arn.value}
  thumbnailProcessorTaskArn: ${terraform:${self:custom.tfStage}:thumbnail-processor-task-arn.value}
  thumbnailSubnets: ${terraform:${self:custom.tfStage}:subnet-id.value}
  thumbnailSecurityGroups: ${terraform:${self:custom.tfStage}:security-group-id.value}

  siteGeneratorAccessKeyParameter: ${terraform:${self:custom.tfStage}:site-generator-accesskey-parameter.value}
  siteGeneratorSecretKeyParameter: ${terraform:${self:custom.tfStage}:site-generator-secretkey-parameter.value}

  apiGatewayRestApiId: ${terraform:${self:custom.tfStage}:api-gateway-rest-api-id.value}
  apiGatewayRestApiRootResourceId: ${terraform:${self:custom.tfStage}:api-gateway-rest-api-root-resource-id.value}

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  region: eu-west-2
  runtime: dotnetcore2.1

  apiGateway:
    restApiId: ${self:custom.apiGatewayRestApiId}
    restApiRootResourceId: ${self:custom.apiGatewayRestApiRootResourceId}

  environment:
    PHOTOGRAPH_TABLE: ${self:service}-${self:provider.stage}-photograph
    IMAGE_BUCKET: ${self:service}-${self:provider.stage}-image
    IMAGE_PROCESSOR_TOPIC_ARN: ${self:custom.imageProcessorTopicArn}
    SITE_BUCKET: ${self:service}-${self:provider.stage}-site

  role: ${self:custom.lambdaRoleArn}

package:
  artifact: deploy/deploy-package.zip

functions:
  - ${file(serverless/functions.yml)}
  - ${file(serverless/functions-thumbnailprocessor.yml)}
